Index: app/src/main/java/com/example/bodyworks/CalorieTrackerActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.bodyworks\n\nimport android.app.DatePickerDialog\nimport android.os.Bundle\nimport android.widget.ArrayAdapter\nimport android.widget.Button\nimport android.widget.Spinner\nimport android.widget.TextView\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.lifecycle.ViewModelProvider\nimport androidx.lifecycle.ViewModelProvider.AndroidViewModelFactory\nimport com.example.bodyworks.databinding.ActivityCalorieBinding\nimport com.example.bodyworks.model.CalorieTracker\nimport com.example.bodyworks.viewModel.CalorieViewModel\nimport com.github.chartcore.common.ChartTypes\nimport com.github.chartcore.common.Position\nimport com.github.chartcore.common.TextAlign\nimport com.github.chartcore.data.chart.ChartCoreModel\nimport com.github.chartcore.data.chart.ChartData\nimport com.github.chartcore.data.dataset.ChartNumberDataset\nimport com.github.chartcore.data.option.ChartOptions\nimport com.github.chartcore.data.option.elements.Elements\nimport com.github.chartcore.data.option.elements.Line\nimport com.github.chartcore.data.option.plugin.Plugin\nimport com.github.chartcore.data.option.plugin.Title\nimport java.text.SimpleDateFormat\nimport java.util.Calendar\nimport java.util.Locale\n\nclass CalorieTrackerActivity : AppCompatActivity() {\n\n    private lateinit var viewModel: CalorieViewModel\n    private lateinit var binding: ActivityCalorieBinding\n\n    val calendar: Calendar = Calendar.getInstance()\n    val dateFormatter = SimpleDateFormat(\"dd/MM/yyyy\", Locale.CANADA)\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        binding = ActivityCalorieBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n\n        viewModel = ViewModelProvider(this, AndroidViewModelFactory(application))[CalorieViewModel::class.java]\n\n        val spinnerFoodItems: Spinner = binding.spinnerFoodItems\n        val buttonAddItem: Button = binding.buttonAddItem\n        val textViewTotalCalories: TextView = binding.textViewTotalCalories\n\n        val foodItems = getFoodItems()\n        val adapter = ArrayAdapter(this, android.R.layout.simple_spinner_dropdown_item, foodItems.map { it.date })\n        spinnerFoodItems.adapter = adapter\n\n        val date = dateFormatter.format(calendar.timeInMillis)\n\n        updateChart()\n        \n        buttonAddItem.setOnClickListener {\n            val selectedItem = foodItems[spinnerFoodItems.selectedItemPosition]\n            val data = viewModel.getCurrentCalorie(this, date)\n            if(data.size != 0){\n                var calorie = data[0].calories\n                calorie += selectedItem.calories\n                viewModel.updateCalorie(this, CalorieTracker(date, calorie))\n            } else{\n                viewModel.insertCalorie(this, CalorieTracker(date, selectedItem.calories))\n            }\n            updateChart()\n            binding.chartCore.reload()\n\n        }\n\n        viewModel.totalCalories.observe(this) { total ->\n            textViewTotalCalories.text = \"Total Calories: $total\"\n        }\n    }\n\n    private fun updateChart() {\n\n        val calorieData = viewModel.getCalorieTrackerData(this)\n\n        // Calculate the total calories and store it in the chart data\n        val data = calorieData.map { it.calories }\n        val labels = calorieData.map { it.date }\n\n        val chartData = ChartData()\n        chartData.addDataset(\n            ChartNumberDataset()\n                .data(data)\n                .label(\"Calorie\")\n        )\n        chartData.labels(labels)\n\n        val chartOptions = ChartOptions()\n            .plugin(\n                Plugin()\n                    .title(\n                        Title()\n                            .display(true)\n                            .text(\"Calorie Tracker\")\n                            .position(Position.TOP)\n                            .align(TextAlign.CENTER)\n                            .color(\"red\")\n                    )\n            )\n            .elements(\n                Elements()\n                    .line(\n                        Line()\n                            .tension(0.5f)\n                    )\n            )\n\n        val chartModel = ChartCoreModel()\n            .type(ChartTypes.LINE)\n            .data(chartData)\n            .options(chartOptions)\n\n        binding.chartCore.draw(chartModel)\n    }\n\n\n    private fun getFoodItems(): List<CalorieTracker> {\n        return listOf(\n            CalorieTracker(\"Apple\", 95.0),\n            CalorieTracker(\"Banana\", 105.0),\n            CalorieTracker(\"Orange\", 62.0),\n            CalorieTracker(\"Milk\", 149.0),\n            CalorieTracker(\"Egg\", 72.0),\n            CalorieTracker(\"Fish\", 218.0),\n            CalorieTracker(\"Chicken\", 187.0),\n            CalorieTracker(\"Lamb\", 250.0),\n            CalorieTracker(\"Rice\", 121.0),\n            CalorieTracker(\"Bread\", 247.0),\n            CalorieTracker(\"Potato\", 93.0),\n            CalorieTracker(\"Tofu\", 145.0),\n            CalorieTracker(\"Cheese\", 403.0),\n            CalorieTracker(\"Beef\", 250.0),\n        )\n    }\n}\n
===================================================================
diff --git a/app/src/main/java/com/example/bodyworks/CalorieTrackerActivity.kt b/app/src/main/java/com/example/bodyworks/CalorieTrackerActivity.kt
--- a/app/src/main/java/com/example/bodyworks/CalorieTrackerActivity.kt	
+++ b/app/src/main/java/com/example/bodyworks/CalorieTrackerActivity.kt	
@@ -53,7 +53,7 @@
         val date = dateFormatter.format(calendar.timeInMillis)
 
         updateChart()
-        
+
         buttonAddItem.setOnClickListener {
             val selectedItem = foodItems[spinnerFoodItems.selectedItemPosition]
             val data = viewModel.getCurrentCalorie(this, date)
