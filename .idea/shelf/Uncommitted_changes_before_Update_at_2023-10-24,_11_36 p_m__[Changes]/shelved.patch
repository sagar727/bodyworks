Index: app/src/main/java/com/example/bodyworks/WorkoutActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.bodyworks\n\nimport android.app.Dialog\nimport android.net.Uri\nimport androidx.appcompat.app.AppCompatActivity\nimport android.os.Bundle\nimport android.os.CountDownTimer\nimport android.widget.Button\nimport android.widget.EditText\nimport android.widget.ProgressBar\nimport android.widget.TextView\nimport android.widget.Toast\nimport com.example.bodyworks.databinding.ActivityWorkoutBinding\n\nclass WorkoutActivity : AppCompatActivity() {\n\n    private var timeSelected : Int = 0\n    private var timeCountdown : CountDownTimer? = null\n    private var timeProgress = 0\n    private var timeOffSet : Long = 0\n    private var isStart = true\n\n    lateinit var binding: ActivityWorkoutBinding\n    val text = \"Transversus abdominis, Rectus abdominis, Internal oblique, External oblique muscles\"\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_workout)\n\n        binding = ActivityWorkoutBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n\n        val toolbar = binding.toolbar2\n        setSupportActionBar(toolbar)\n        supportActionBar?.setDisplayHomeAsUpEnabled(true)\n        toolbar.setNavigationOnClickListener {\n            onBackPressed()\n        }\n\n        binding.videoView.setVideoURI(Uri.parse(\"android.resource://\" + packageName + \"/\" + R.raw.burpee_workout))\n        binding.videoView.requestFocus()\n        binding.videoView.start()\n\n        binding.videoView.setOnCompletionListener {\n            binding.videoView.start()\n        }\n        splitText(text)\n\n        val setBtn: Button = findViewById(R.id.setTime)\n        setBtn.setOnClickListener{\n            setTime()\n        }\n\n        val startBtn : Button = findViewById(R.id.startBtn)\n        startBtn.setOnClickListener {\n            setUp()\n        }\n\n        val resetBtn : Button = findViewById(R.id.resetBtn)\n        resetBtn.setOnClickListener {\n            resetTimer()\n        }\n    }\n\n    private fun splitText(txt: String){\n        val str = txt.split(\",\").toTypedArray()\n        var newStr = \"Muscles worked: \"\n        for(teststr in str){\n            newStr = \"$newStr\\n\\n*$teststr\"\n        }\n        binding.textView2.text = newStr\n    }\n\n    private fun setUp(){\n        val startBtn : Button = findViewById(R.id.startBtn)\n        if(timeSelected > timeProgress){\n            if(isStart){\n                startBtn.text = getString(R.string.pause)\n                startTimer(timeOffSet)\n                isStart = false\n            }else {\n                isStart = true\n                startBtn.text = getString(R.string.resume)\n                pauseTimer()\n            }\n        }\n    }\n\n    private fun startTimer(pauseTimeL : Long){\n        val progressBar = findViewById<ProgressBar>(R.id.progressBar)\n        timeCountdown = object : CountDownTimer(\n            (timeSelected * 1000).toLong() - pauseTimeL * 1000, 1000){\n            override fun onTick(p0: Long) {\n                timeProgress++\n                timeOffSet = timeSelected.toLong() - p0/1000\n                progressBar.progress = timeSelected - timeProgress\n\n                val displayTime : TextView = findViewById(R.id.displayTime)\n                displayTime.text = (timeSelected - timeProgress).toString()\n            }\n\n            override fun onFinish() {\n                resetTimer()\n                Toast.makeText(this@WorkoutActivity, \"Times Up!!\", Toast.LENGTH_SHORT).show()\n            }\n\n        }.start()\n    }\n\n    private fun pauseTimer(){\n        if(timeCountdown != null){\n            timeCountdown!!.cancel()\n        }\n    }\n\n\n    private fun resetTimer(){\n        if(timeCountdown != null){\n            timeCountdown!!.cancel()\n            timeProgress = 0\n            timeSelected = 0\n            timeOffSet = 0\n            timeCountdown = null\n\n            val startBtn : Button = findViewById(R.id.startBtn)\n            startBtn.text = getString(R.string.start)\n            isStart = true\n\n            val progressBar = findViewById<ProgressBar>(R.id.progressBar)\n            progressBar.progress = 0\n\n            val displayTime : TextView = findViewById(R.id.displayTime)\n            displayTime.text = \"0\"\n        }\n    }\n\n    private fun  setTime(){\n        val timeDialogue = Dialog(this)\n        timeDialogue.setContentView(R.layout.add_dialogue)\n        val timeSet = timeDialogue.findViewById<EditText>(R.id.getTime)\n        val displayTime : TextView = findViewById(R.id.displayTime)\n        val startBtn : Button = findViewById(R.id.startBtn)\n        val progressBar = findViewById<ProgressBar>(R.id.progressBar)\n        timeDialogue.findViewById<Button>(R.id.setBtn).setOnClickListener {\n            if(timeSet.text.isEmpty()){\n                Toast.makeText(this, \"Set Time\", Toast.LENGTH_SHORT).show()\n            }else {\n                displayTime.text = timeSet.text\n                startBtn.text = getString(R.string.start)\n                timeSelected = timeSet.text.toString().toInt()\n                progressBar.max = timeSelected\n            }\n            timeDialogue.dismiss()\n        }\n        timeDialogue.show()\n    }\n\n    override fun onDestroy(){\n        super.onDestroy()\n        if(timeCountdown != null){\n            timeCountdown?.cancel()\n            timeProgress = 0\n        }\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/bodyworks/WorkoutActivity.kt b/app/src/main/java/com/example/bodyworks/WorkoutActivity.kt
--- a/app/src/main/java/com/example/bodyworks/WorkoutActivity.kt	(revision 9e6d88152ed9e6e7cd21f2b3cb2fd61e88dd72d3)
+++ b/app/src/main/java/com/example/bodyworks/WorkoutActivity.kt	(date 1698204099283)
@@ -60,6 +60,12 @@
         resetBtn.setOnClickListener {
             resetTimer()
         }
+
+        //Database Code
+        // Getting data from the intent
+        val categoryTitle = intent.getStringExtra("categoryTitle")
+        val imgSrc = intent.getStringExtra("imgSrc")
+        val workoutName = intent.getStringExtra("workoutName")
     }
 
     private fun splitText(txt: String){
Index: app/src/main/java/com/example/bodyworks/WorkoutFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.bodyworks\n\nimport android.os.Bundle\nimport androidx.fragment.app.Fragment\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\n\n// TODO: Rename parameter arguments, choose names that match\n// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\nprivate const val ARG_PARAM1 = \"param1\"\nprivate const val ARG_PARAM2 = \"param2\"\n\n/**\n * A simple [Fragment] subclass.\n * Use the [WorkoutFragment.newInstance] factory method to\n * create an instance of this fragment.\n */\nclass WorkoutFragment : Fragment() {\n    // TODO: Rename and change types of parameters\n    private var param1: String? = null\n    private var param2: String? = null\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        arguments?.let {\n            param1 = it.getString(ARG_PARAM1)\n            param2 = it.getString(ARG_PARAM2)\n        }\n    }\n\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n        // Inflate the layout for this fragment\n        return inflater.inflate(R.layout.fragment_workout, container, false)\n    }\n\n    companion object {\n        /**\n         * Use this factory method to create a new instance of\n         * this fragment using the provided parameters.\n         *\n         * @param param1 Parameter 1.\n         * @param param2 Parameter 2.\n         * @return A new instance of fragment WorkoutFragment.\n         */\n        // TODO: Rename and change types and number of parameters\n        @JvmStatic\n        fun newInstance(param1: String, param2: String) =\n            WorkoutFragment().apply {\n                arguments = Bundle().apply {\n                    putString(ARG_PARAM1, param1)\n                    putString(ARG_PARAM2, param2)\n                }\n            }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/bodyworks/WorkoutFragment.kt b/app/src/main/java/com/example/bodyworks/WorkoutFragment.kt
--- a/app/src/main/java/com/example/bodyworks/WorkoutFragment.kt	(revision 9e6d88152ed9e6e7cd21f2b3cb2fd61e88dd72d3)
+++ b/app/src/main/java/com/example/bodyworks/WorkoutFragment.kt	(date 1698202266100)
@@ -5,28 +5,19 @@
 import android.view.LayoutInflater
 import android.view.View
 import android.view.ViewGroup
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+import com.example.bodyworks.adapter.ParentWorkoutAdapter
+import com.example.bodyworks.databinding.ActivityMainBinding
+import com.example.bodyworks.model.ChildSubWorkoutModel
+import com.example.bodyworks.model.ParentWorkoutModel
+import java.util.Calendar
 
-// TODO: Rename parameter arguments, choose names that match
-// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
-private const val ARG_PARAM1 = "param1"
-private const val ARG_PARAM2 = "param2"
-
-/**
- * A simple [Fragment] subclass.
- * Use the [WorkoutFragment.newInstance] factory method to
- * create an instance of this fragment.
- */
 class WorkoutFragment : Fragment() {
-    // TODO: Rename and change types of parameters
-    private var param1: String? = null
-    private var param2: String? = null
+    private lateinit var layoutBind: ActivityMainBinding;
 
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
-        arguments?.let {
-            param1 = it.getString(ARG_PARAM1)
-            param2 = it.getString(ARG_PARAM2)
-        }
     }
 
     override fun onCreateView(
@@ -37,23 +28,147 @@
         return inflater.inflate(R.layout.fragment_workout, container, false)
     }
 
-    companion object {
-        /**
-         * Use this factory method to create a new instance of
-         * this fragment using the provided parameters.
-         *
-         * @param param1 Parameter 1.
-         * @param param2 Parameter 2.
-         * @return A new instance of fragment WorkoutFragment.
-         */
-        // TODO: Rename and change types and number of parameters
-        @JvmStatic
-        fun newInstance(param1: String, param2: String) =
-            WorkoutFragment().apply {
-                arguments = Bundle().apply {
-                    putString(ARG_PARAM1, param1)
-                    putString(ARG_PARAM2, param2)
-                }
-            }
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+        val parentWorkoutRecyclerView = view.findViewById<RecyclerView>(R.id.parentRecyclerview)
+        val parentItemAdapter = ParentWorkoutAdapter(parentItemList())
+        parentWorkoutRecyclerView.adapter = parentItemAdapter
+
+        //code for greeting text
+        val greetingsTextView = view.findViewById<TextView>(R.id.greetingsTxt);
+        greetingsTextView.text = myGreetingMessage();
+    }
+
+    //Change greeting message according to hour
+    fun myGreetingMessage(): String {
+        val cal = Calendar.getInstance();
+        val timeofDay = cal.get(Calendar.HOUR_OF_DAY);
+
+        return when (timeofDay) {
+            in 0..11 -> "Good Morning!"
+            in 12..15 -> "Good Afternoon!"
+            in 16..24 -> "Good Evening!"
+            else -> "Hello, How are you today?"
+        }
     }
+    private fun parentItemList(): MutableList<ParentWorkoutModel> {
+        val itemList : MutableList<ParentWorkoutModel> = ArrayList<ParentWorkoutModel>()
+
+        itemList.add(ParentWorkoutModel("Abdomen", abdomenItemList()))
+        itemList.add(ParentWorkoutModel("Back Exercise", backExItemList()))
+        itemList.add(ParentWorkoutModel("Biceps & Forearm", bicepsForearmItemList()))
+        itemList.add(ParentWorkoutModel("Cardio", cardioItemList()))
+        itemList.add(ParentWorkoutModel("Chest", chestItemList()))
+        itemList.add(ParentWorkoutModel("Leg", legItemList()))
+        itemList.add(ParentWorkoutModel("Shoulder", shoulderItemList()))
+        itemList.add(ParentWorkoutModel("Triceps", tricepsItemList()))
+
+        return itemList
+    }
+
+    private fun tricepsItemList(): MutableList<ChildSubWorkoutModel> {
+        val childItemList: MutableList<ChildSubWorkoutModel> = ArrayList<ChildSubWorkoutModel>()
+
+        childItemList.add(ChildSubWorkoutModel(R.drawable.skullcrusher, "Skull Crusher"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.dip, "Dip"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.standingoverheadcabeltricepsextension, "Standing Overhead Cabel Triceps Extension"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.cabelropetriceppushdown, "Cabel Rope Tricep Pushdown"))
+
+        return childItemList;
+    }
+
+    private fun shoulderItemList(): MutableList<ChildSubWorkoutModel> {
+        val childItemList: MutableList<ChildSubWorkoutModel> = ArrayList<ChildSubWorkoutModel>()
+
+        childItemList.add(ChildSubWorkoutModel(R.drawable.dumbbellfrontraise, "Dumbell Front Raise"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.dumbbelllateralraise, "Dumbbell lateral Raise"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.seatedmilitarypress, "Seated Military Press"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.cabellateralraise, "Cabel Lateral raise"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.overheadpress, "Overhead Press"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.facepull, "Face Pull"))
+
+        return childItemList;
+    }
+
+    private fun legItemList(): MutableList<ChildSubWorkoutModel> {
+        val childItemList: MutableList<ChildSubWorkoutModel> = ArrayList<ChildSubWorkoutModel>()
+
+        childItemList.add(ChildSubWorkoutModel(R.drawable.squats, "Squats"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.legpress, "Leg Press"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.hacksquat, "Hack Squats"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.legextension, "Leg Extension"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.legcurl, "Leg Curl"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.lunges, "Lunges"))
+
+        return childItemList;
+    }
+
+    private fun chestItemList(): MutableList<ChildSubWorkoutModel> {
+        val childItemList: MutableList<ChildSubWorkoutModel> = ArrayList<ChildSubWorkoutModel>()
+
+        childItemList.add(ChildSubWorkoutModel(R.drawable.dumbbellbenchpress, "Dumbbell Bench Press"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.inclinebenchpress, "Incline Bench Press"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.machinechestpress, "Machine Chest Press"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.pushups, "Push-up"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.dip, "Dip"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.chestfly, "Chest Fly"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.machinefly, "Machine Fy"))
+
+        return childItemList;
+    }
+
+    private fun cardioItemList(): MutableList<ChildSubWorkoutModel> {
+        val childItemList: MutableList<ChildSubWorkoutModel> = ArrayList<ChildSubWorkoutModel>()
+
+        childItemList.add(ChildSubWorkoutModel(R.drawable.runontreadmill, "Run on the treadmill"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.pedalawayonanelliptical, "Pedal away on an elliptical"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.climbstepsonastairmachine, "Clim steps on a stair machine"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.burpee, "Burpee"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.jumpingjacks, "Jumping Jacks"))
+
+        return childItemList;
+    }
+
+    private fun bicepsForearmItemList(): MutableList<ChildSubWorkoutModel> {
+        val childItemList: MutableList<ChildSubWorkoutModel> = ArrayList<ChildSubWorkoutModel>()
+
+        childItemList.add(ChildSubWorkoutModel(R.drawable.dumbellcurls, "Dumbbell Curl"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.inclinedumbellcurls, "Incline Dumbbell Curl"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.hammercurls, "Hammer Curl"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.cabelcurls, "Cabel Curl"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.barbellcurls, "Barbell Curl"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.concentrationcurls, "Concentration Curl"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.palmsupwristcurls, "Palms-up Wrist Curl"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.palmdownwristcurls, "Palms-down Wrist Curl"))
+
+        return childItemList;
+    }
+
+    private fun backExItemList(): MutableList<ChildSubWorkoutModel> {
+        val childItemList: MutableList<ChildSubWorkoutModel> = ArrayList<ChildSubWorkoutModel>()
+
+        childItemList.add(ChildSubWorkoutModel(R.drawable.deadlift, "Deadlift"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.singlearmdumbbellrow, "Single-Arm Dumbbell Row"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.inclinedumbbellrow, "Incline Rows"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.pullups, "Pull-ups"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.seatedcabelrow, "Seated Cabel Row"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.latpulldown, "Lat Pull-Downs"))
+
+        return childItemList;
+    }
+
+    // Method to pass the arguments for the elements of child RecyclerView
+    private fun abdomenItemList(): MutableList<ChildSubWorkoutModel> {
+        val childItemList: MutableList<ChildSubWorkoutModel> = ArrayList<ChildSubWorkoutModel>()
+
+        childItemList.add(ChildSubWorkoutModel(R.drawable.plank, "Plank"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.legraise, "Leg Raise"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.bicyclecrunch, "Bicycle Crunch"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.mountainclimber, "Mountain Climber"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.russiantwist, "Russian Twists"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.crunches, "Crunches"))
+        childItemList.add(ChildSubWorkoutModel(R.drawable.hanginglegraise, "Hanging Leg Raise"))
+
+        return childItemList;
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/bodyworks/database/DatabaseHelper.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.bodyworks.database\n\nimport android.annotation.SuppressLint\nimport android.content.ContentValues\nimport android.content.Context\nimport android.database.Cursor\nimport android.database.DatabaseUtils\nimport android.database.sqlite.SQLiteDatabase\nimport android.database.sqlite.SQLiteOpenHelper\nimport android.widget.Toast\nimport com.example.bodyworks.model.User\nimport com.example.bodyworks.model.WorkoutDataModel\n\nval DATABASE_NAME = \"Bodyworks.db\"\nval DATABASE_VERSION = 1\n\nval ACTIVITY_TABLE = \"activity\"\nval ACTIVITY_ID = \"actid\"\nval ACTIVITY_NAME = \"actname\"\n\nval WORKOUT_ABDOMEN = \"abdomen\"\nval ABDOMEN_ID = \"abdomenid\"\nval ABDOMEN_NAME = \"abdomenname\"\nval ABDOMEN_VIDEO = \"abdomenvideo\"\nval ABDOMEN_MUSCLES = \"abdomenmuscles\"\nval ABDOMEN_THUMBNAIL = \"abdomenthumbnail\"\n\nval WORKOUT_BACK = \"back\"\nval BACK_ID = \"backid\"\nval BACK_NAME = \"backname\"\nval BACK_VIDEO = \"backvideo\"\nval BACK_MUSCLES = \"backmuscles\"\nval BACK_THUMBNAIL = \"backthumbnail\"\n\nval WORKOUT_BICEPS = \"biceps\"\nval BICEPS_ID = \"bicepsid\"\nval BICEPS_NAME = \"bicepsname\"\nval BICEPS_VIDEO = \"bicepsvideo\"\nval BICEPS_MUSCLES = \"bicepsmuscles\"\nval BICEPS_THUMBNAIL = \"bicepsthumbnail\"\n\nval WORKOUT_CARDIO = \"cardio\"\nval CARDIO_ID = \"cardioid\"\nval CARDIO_NAME = \"cardioname\"\nval CARDIO_VIDEO = \"cardiovideo\"\nval CARDIO_MUSCLES = \"cardiomuscles\"\nval CARDIO_THUMBNAIL = \"cardiothumbnail\"\n\nval WORKOUT_CHEST = \"chest\"\nval CHEST_ID = \"chestid\"\nval CHEST_NAME = \"chestname\"\nval CHEST_VIDEO = \"chestvideo\"\nval CHEST_MUSCLES = \"chestmuscles\"\nval CHEST_THUMBNAIL = \"chestthumbnail\"\n\nval WORKOUT_LEG = \"leg\"\nval LEG_ID = \"legid\"\nval LEG_NAME = \"legname\"\nval LEG_VIDEO = \"legvideo\"\nval LEG_MUSCLES = \"legmuscles\"\nval LEG_THUMBNAIL = \"legthumbnail\"\n\nval WORKOUT_SHOULDER = \"shoulder\"\nval SHOULDER_ID = \"shoulderid\"\nval SHOULDER_NAME = \"shouldername\"\nval SHOULDER_VIDEO = \"shouldervideo\"\nval SHOULDER_MUSCLES = \"shouldermuscles\"\nval SHOULDER_THUMBNAIL = \"shoulderthumbnail\"\n\nval WORKOUT_TRICEPS = \"triceps\"\nval TRICEPS_ID = \"tricepsid\"\nval TRICEPS_NAME = \"tricepsname\"\nval TRICEPS_VIDEO = \"tricepsvideo\"\nval TRICEPS_MUSCLES = \"tricepsmuscles\"\nval TRICEPS_THUMBNAIL = \"tricepsthumbnail\"\n\nval USER_TABLE = \"user\"\nval USER_ID = \"userid\"\nval USER_WT = \"userwt\"\nval USER_BMI = \"userbmi\"\n\nval PLANNER_TABLE = \"planner\"\nval DAY_ID = \"dayid\"\nval DAY_NAME = \"dayname\"\nval ACTIVITY = \"activity\"\n\n\nclass DatabaseHelper(var context: Context) : SQLiteOpenHelper(context, DATABASE_NAME,null,\n    DATABASE_VERSION){\n    override fun onCreate(db: SQLiteDatabase?) {\n        val createActivityTable =\n            \"CREATE TABLE $ACTIVITY_TABLE(\" +\n                    \"$ACTIVITY_ID INTEGER PRIMARY KEY AUTOINCREMENT,\" +\n                    \"$ACTIVITY_NAME TEXT NOT NULL\" +\n                    \")\"\n        db?.execSQL(createActivityTable)\n\n        val createAbdomenTable =\n            \"CREATE TABLE $WORKOUT_ABDOMEN(\" +\n                    \"$ABDOMEN_ID INTEGER PRIMARY KEY AUTOINCREMENT,\" +\n                    \"$ABDOMEN_NAME TEXT NOT NULL, \" +\n                    \"$ABDOMEN_VIDEO TEXT NOT NULL, \" +\n                    \"$ABDOMEN_THUMBNAIL TEXT NOT NULL,\" +\n                    \"$ABDOMEN_MUSCLES TEXT NOT NULL\" +\n                    \")\"\n        db?.execSQL(createAbdomenTable)\n\n        val createBackTable =\n            \"CREATE TABLE $WORKOUT_BACK(\" +\n                    \"$BACK_ID INTEGER PRIMARY KEY AUTOINCREMENT,\" +\n                    \"$BACK_NAME TEXT NOT NULL, \" +\n                    \"$BACK_VIDEO TEXT NOT NULL, \" +\n                    \"$BACK_THUMBNAIL TEXT NOT NULL,\" +\n                    \"$BACK_MUSCLES TEXT NOT NULL\" +\n                    \")\"\n        db?.execSQL(createBackTable)\n\n        val createBicepsTable =\n            \"CREATE TABLE $WORKOUT_BICEPS(\" +\n                    \"$BICEPS_ID INTEGER PRIMARY KEY AUTOINCREMENT,\" +\n                    \"$BICEPS_NAME TEXT NOT NULL, \" +\n                    \"$BICEPS_VIDEO TEXT NOT NULL, \" +\n                    \"$BICEPS_THUMBNAIL TEXT NOT NULL,\" +\n                    \"$BICEPS_MUSCLES TEXT NOT NULL\" +\n                    \")\"\n        db?.execSQL(createBicepsTable)\n\n        val createCardioTable =\n            \"CREATE TABLE $WORKOUT_CARDIO(\" +\n                    \"$CARDIO_ID INTEGER PRIMARY KEY AUTOINCREMENT,\" +\n                    \"$CARDIO_NAME TEXT NOT NULL, \" +\n                    \"$CARDIO_VIDEO TEXT NOT NULL, \" +\n                    \"$CARDIO_THUMBNAIL TEXT NOT NULL,\" +\n                    \"$CARDIO_MUSCLES TEXT NOT NULL\" +\n                    \")\"\n        db?.execSQL(createCardioTable)\n\n        val createChestTable =\n            \"CREATE TABLE $WORKOUT_CHEST(\" +\n                    \"$CHEST_ID INTEGER PRIMARY KEY AUTOINCREMENT,\" +\n                    \"$CHEST_NAME TEXT NOT NULL, \" +\n                    \"$CHEST_VIDEO TEXT NOT NULL, \" +\n                    \"$CHEST_THUMBNAIL TEXT NOT NULL,\" +\n                    \"$CHEST_MUSCLES TEXT NOT NULL\" +\n                    \")\"\n        db?.execSQL(createChestTable)\n\n        val createLegTable =\n            \"CREATE TABLE $WORKOUT_LEG(\" +\n                    \"$LEG_ID INTEGER PRIMARY KEY AUTOINCREMENT,\" +\n                    \"$LEG_NAME TEXT NOT NULL, \" +\n                    \"$LEG_VIDEO TEXT NOT NULL, \" +\n                    \"$LEG_THUMBNAIL TEXT NOT NULL,\" +\n                    \"$LEG_MUSCLES TEXT NOT NULL\" +\n                    \")\"\n        db?.execSQL(createLegTable)\n\n        val createShoulderTable =\n            \"CREATE TABLE $WORKOUT_SHOULDER(\" +\n                    \"$SHOULDER_ID INTEGER PRIMARY KEY AUTOINCREMENT,\" +\n                    \"$SHOULDER_NAME TEXT NOT NULL, \" +\n                    \"$SHOULDER_VIDEO TEXT NOT NULL, \" +\n                    \"$SHOULDER_THUMBNAIL TEXT NOT NULL,\" +\n                    \"$SHOULDER_MUSCLES TEXT NOT NULL\" +\n                    \")\"\n        db?.execSQL(createShoulderTable)\n\n        val createTricepsTable =\n            \"CREATE TABLE $WORKOUT_TRICEPS(\" +\n                    \"$TRICEPS_ID INTEGER PRIMARY KEY AUTOINCREMENT,\" +\n                    \"$TRICEPS_NAME TEXT NOT NULL, \" +\n                    \"$TRICEPS_VIDEO TEXT NOT NULL, \" +\n                    \"$TRICEPS_THUMBNAIL TEXT NOT NULL,\" +\n                    \"$TRICEPS_MUSCLES TEXT NOT NULL\" +\n                    \")\"\n        db?.execSQL(createTricepsTable)\n\n        val createUserTable =\n            \"CREATE TABLE $USER_TABLE(\" +\n                    \"$USER_ID INTEGER PRIMARY KEY AUTOINCREMENT,\" +\n                    \"$USER_WT TEXT,\" +\n                    \"$USER_BMI TEXT\" +\n                    \")\"\n        db?.execSQL(createUserTable)\n\n        val createPlannerTable =\n            \"CREATE TABLE $PLANNER_TABLE(\" +\n                    \"$DAY_ID INTEGER PRIMARY KEY AUTOINCREMENT,\" +\n                    \"$DAY_NAME TEXT,\" +\n                    \"$ACTIVITY TEXT\" +\n                    \")\"\n        db?.execSQL(createPlannerTable)\n    }\n\n    override fun onUpgrade(db: SQLiteDatabase?, oldVersion: Int, newVersion: Int) {\n        val deleteActivityTable = \"DROP TABLE IF EXISTS $ACTIVITY_TABLE\"\n        db?.execSQL(deleteActivityTable)\n\n        val deleteAbdomenTable = \"DROP TABLE IF EXISTS $WORKOUT_ABDOMEN\"\n        db?.execSQL(deleteAbdomenTable)\n\n        val deleteBackTable = \"DROP TABLE IF EXISTS $WORKOUT_BACK\"\n        db?.execSQL(deleteBackTable)\n\n        val deleteBicepsTable = \"DROP TABLE IF EXISTS $WORKOUT_BICEPS\"\n        db?.execSQL(deleteBicepsTable)\n\n        val deleteCardioTable = \"DROP TABLE IF EXISTS $WORKOUT_CARDIO\"\n        db?.execSQL(deleteCardioTable)\n\n        val deleteChestTable = \"DROP TABLE IF EXISTS $WORKOUT_CHEST\"\n        db?.execSQL(deleteChestTable)\n\n        val deleteLegTable = \"DROP TABLE IF EXISTS $WORKOUT_LEG\"\n        db?.execSQL(deleteLegTable)\n\n        val deleteShoulderTable = \"DROP TABLE IF EXISTS $WORKOUT_SHOULDER\"\n        db?.execSQL(deleteShoulderTable)\n\n        val deleteTricepsTable = \"DROP TABLE IF EXISTS $WORKOUT_TRICEPS\"\n        db?.execSQL(deleteTricepsTable)\n\n        val deleteUserTable = \"DROP TABLE IF EXISTS $USER_TABLE\"\n        db?.execSQL(deleteUserTable)\n\n        val deletePlannerTable = \"DROP TABLE IF EXISTS $PLANNER_TABLE\"\n        db?.execSQL(deletePlannerTable)\n    }\n\n    fun addActivityData(activityData: Array<String>){\n        val db = this.writableDatabase\n        val content = ContentValues()\n        for(activity in activityData){\n            content.put(ACTIVITY_NAME,activity)\n            val result = db.insert(ACTIVITY_TABLE,null,content)\n            if(result == (-1).toLong()){\n                Toast.makeText(context,\"Could not add data!!\",Toast.LENGTH_LONG).show()\n            }\n        }\n        db.close()\n    }\n\n    fun addWorkoutData(workout:WorkoutDataModel, tableName: String){\n        val columnName = tableName.uppercase()\n        val db = this.writableDatabase\n        val content = ContentValues()\n        content.put(ABDOMEN_NAME,workout.name)\n        content.put(ABDOMEN_MUSCLES,workout.muscle)\n        content.put(ABDOMEN_VIDEO,workout.video)\n        content.put(ABDOMEN_THUMBNAIL,workout.thumbnail)\n        val result = db.insert(WORKOUT_ABDOMEN,null,content)\n        if(result == (-1).toLong()){\n            Toast.makeText(context,\"Could not add data!!\",Toast.LENGTH_LONG).show()\n        }else{\n            Toast.makeText(context,\"Data added successfully!!\", Toast.LENGTH_LONG).show()\n        }\n        db.close()\n    }\n\n    fun addUserData(user: User){\n        val db = this.writableDatabase\n        val content = ContentValues()\n        content.put(USER_WT,user.wt)\n        content.put(USER_BMI,user.bmi)\n        val result = db.insert(USER_TABLE,null,content)\n        if(result == (-1).toLong()){\n            Toast.makeText(context,\"Could not add data!!\",Toast.LENGTH_LONG).show()\n        }else{\n            Toast.makeText(context,\"Data added successfully!!\", Toast.LENGTH_LONG).show()\n        }\n        db.close()\n    }\n\n    @SuppressLint(\"Range\")\n    fun getBMI(): String{\n        val selectQuery = \"SELECT * FROM $USER_TABLE\"\n        val db = this.readableDatabase\n        var cursor: Cursor? = null\n        var bmi: String = \"0\"\n        cursor = db.rawQuery(selectQuery,null)\n        if (cursor != null) {\n            if(cursor.moveToFirst()){\n                do{\n                    bmi = cursor.getString(cursor.getColumnIndex(USER_BMI))\n                }while (cursor.moveToNext())\n            }\n        }\n        return bmi\n    }\n\n    fun countTableRow(tableName: String):Int{\n        val db = this.readableDatabase\n        val count = DatabaseUtils.queryNumEntries(db, tableName)\n        db.close()\n        return count.toInt()\n    }\n//\n//    fun deleteAll(){\n//        val db = this.writableDatabase\n//        val result = db.delete(TABLE_NAME, null,null)\n//        if(result == 0){\n//            Toast.makeText(context,\"Could not delete data!!\",Toast.LENGTH_LONG).show()\n//        }else{\n//            Toast.makeText(context,\"Reset done successfully!!\", Toast.LENGTH_LONG).show()\n//        }\n//        db.close()\n//    }\n\n    fun updateUserData(user:User){\n        val db = this.writableDatabase\n        val content = ContentValues()\n        content.put(USER_WT,user.wt)\n        content.put(USER_BMI,user.bmi)\n        val result = db.update(USER_TABLE,content, null,null)\n        if(result == 0){\n            Toast.makeText(context,\"Could not update data!!\",Toast.LENGTH_LONG).show()\n        }else{\n            Toast.makeText(context,\"Data updated successfully!!\", Toast.LENGTH_LONG).show()\n        }\n        db.close()\n    }\n\n//    fun deleteData(id:Int){\n//        val db = this.writableDatabase\n//        val result = db.delete(TABLE_NAME, \"$COL_ID =$id\",null)\n//        if(result == 0){\n//            Toast.makeText(context,\"Could not delete data!!\",Toast.LENGTH_LONG).show()\n//        }else{\n//            Toast.makeText(context,\"Data deleted successfully!!\", Toast.LENGTH_LONG).show()\n//        }\n//        db.close()\n//    }\n//\n//    @SuppressLint(\"Range\")\n//    fun displayAll():ArrayList<User>{\n//        val userData = ArrayList<User>()\n//        val selectQuery = \"SELECT * FROM $TABLE_NAME\"\n//        val db = this.readableDatabase\n//        var cursor: Cursor? = null\n//        cursor = db.rawQuery(selectQuery,null)\n//        var id:Int\n//        var name:String\n//        var dob:String\n//        if (cursor != null) {\n//            if(cursor.moveToFirst()){\n//                do{\n//                    id = cursor.getInt(cursor.getColumnIndex(COL_ID))\n//                    name = cursor.getString(cursor.getColumnIndex(COL_NAME))\n//                    dob = cursor.getString(cursor.getColumnIndex(COL_DOB))\n//                    val user = User(name,dob)\n//                    user.id = id\n//                    userData.add(user)\n//                }while (cursor.moveToNext())\n//            }\n//        }\n//        return userData\n//    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/bodyworks/database/DatabaseHelper.kt b/app/src/main/java/com/example/bodyworks/database/DatabaseHelper.kt
--- a/app/src/main/java/com/example/bodyworks/database/DatabaseHelper.kt	(revision 9e6d88152ed9e6e7cd21f2b3cb2fd61e88dd72d3)
+++ b/app/src/main/java/com/example/bodyworks/database/DatabaseHelper.kt	(date 1698200488531)
@@ -29,7 +29,7 @@
 val BACK_ID = "backid"
 val BACK_NAME = "backname"
 val BACK_VIDEO = "backvideo"
-val BACK_MUSCLES = "backmuscles"
+val BACK_ES = "backmuscles"
 val BACK_THUMBNAIL = "backthumbnail"
 
 val WORKOUT_BICEPS = "biceps"
@@ -111,7 +111,7 @@
                     "$BACK_NAME TEXT NOT NULL, " +
                     "$BACK_VIDEO TEXT NOT NULL, " +
                     "$BACK_THUMBNAIL TEXT NOT NULL," +
-                    "$BACK_MUSCLES TEXT NOT NULL" +
+                    "$BACK_ES TEXT NOT NULL" +
                     ")"
         db?.execSQL(createBackTable)
 
Index: app/src/main/res/layout/fragment_workout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".WorkoutFragment\">\n\n    <!-- TODO: Update blank fragment layout -->\n    <TextView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:text=\"Workout Page\" />\n\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_workout.xml b/app/src/main/res/layout/fragment_workout.xml
--- a/app/src/main/res/layout/fragment_workout.xml	(revision 9e6d88152ed9e6e7cd21f2b3cb2fd61e88dd72d3)
+++ b/app/src/main/res/layout/fragment_workout.xml	(date 1698198991108)
@@ -3,12 +3,38 @@
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     tools:context=".WorkoutFragment">
 
-    <!-- TODO: Update blank fragment layout -->
-    <TextView
+    <androidx.constraintlayout.widget.ConstraintLayout
         android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:text="Workout Page" />
-
+        android:layout_height="match_parent">
+        <TextView
+            android:id="@+id/greetingsTxt"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="16dp"
+            android:text="TextView"
+            android:textAlignment="center"
+            android:textSize="30sp"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.497"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+        <!-- This is the parent RecyclerView-->
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/parentRecyclerview"
+            android:layout_width="0dp"
+            android:layout_height="0dp"
+            android:layout_marginTop="40dp"
+            android:layout_marginBottom="65dp"
+            android:orientation="vertical"
+            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.0"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/greetingsTxt"
+            app:layout_constraintVertical_bias="0.0" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
 </FrameLayout>
\ No newline at end of file
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\n    id(\"com.android.application\")\n    id(\"org.jetbrains.kotlin.android\")\n}\n\nandroid {\n    namespace = \"com.example.bodyworks\"\n    compileSdk = 33\n\n    defaultConfig {\n        applicationId = \"com.example.bodyworks\"\n        minSdk = 24\n        targetSdk = 33\n        versionCode = 1\n        versionName = \"1.0\"\n\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\n    }\n\n    buildTypes {\n        release {\n            isMinifyEnabled = false\n            proguardFiles(\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\n                \"proguard-rules.pro\"\n            )\n        }\n    }\n    compileOptions {\n        sourceCompatibility = JavaVersion.VERSION_1_8\n        targetCompatibility = JavaVersion.VERSION_1_8\n    }\n    kotlinOptions {\n        jvmTarget = \"1.8\"\n    }\n    buildFeatures{\n        viewBinding = true\n    }\n}\n\ndependencies {\n    implementation(\"androidx.core:core-ktx:1.9.0\")\n    implementation(\"androidx.appcompat:appcompat:1.6.1\")\n    implementation(\"com.google.android.material:material:1.9.0\")\n    implementation(\"androidx.constraintlayout:constraintlayout:2.1.4\")\n    testImplementation(\"junit:junit:4.13.2\")\n    androidTestImplementation(\"androidx.test.ext:junit:1.1.5\")\n    androidTestImplementation(\"androidx.test.espresso:espresso-core:3.5.1\")\n    implementation(\"cat.ereza:customactivityoncrash:2.4.0\")\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision 9e6d88152ed9e6e7cd21f2b3cb2fd61e88dd72d3)
+++ b/app/build.gradle.kts	(date 1698198991114)
@@ -5,7 +5,7 @@
 
 android {
     namespace = "com.example.bodyworks"
-    compileSdk = 33
+    compileSdk = 34
 
     defaultConfig {
         applicationId = "com.example.bodyworks"
@@ -47,4 +47,9 @@
     androidTestImplementation("androidx.test.ext:junit:1.1.5")
     androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
     implementation("cat.ereza:customactivityoncrash:2.4.0")
+
+    //my implementations
+    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2")
+    implementation("com.google.android.material:material:1.10.0")
+    implementation ("com.github.bumptech.glide:glide:4.16.0")
 }
\ No newline at end of file
Index: app/src/main/res/values/themes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources xmlns:tools=\"http://schemas.android.com/tools\">\n    <!-- Base application theme. -->\n    <style name=\"Base.Theme.Bodyworks\" parent=\"Theme.Material3.DayNight.NoActionBar\">\n        <!-- Customize your light theme here. -->\n         <item name=\"colorPrimary\">@color/primary</item>\n        <item name=\"android:statusBarColor\">@color/primary</item>\n        <item name=\"colorPrimaryVariant\">@color/primary</item>\n    </style>\n\n    <style name=\"Theme.Bodyworks\" parent=\"Base.Theme.Bodyworks\" />\n\n    <style name=\"App.Custom.Indicator\" parent=\"Widget.Material3.BottomNavigationView.ActiveIndicator\">\n        <item name=\"android:color\">@color/primary_shade</item>\n    </style>\n\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/themes.xml b/app/src/main/res/values/themes.xml
--- a/app/src/main/res/values/themes.xml	(revision 9e6d88152ed9e6e7cd21f2b3cb2fd61e88dd72d3)
+++ b/app/src/main/res/values/themes.xml	(date 1698198991127)
@@ -8,6 +8,7 @@
     </style>
 
     <style name="Theme.Bodyworks" parent="Base.Theme.Bodyworks" />
+    <style name="cardview" parent="Widget.Material3.CardView.Elevated" />
 
     <style name="App.Custom.Indicator" parent="Widget.Material3.BottomNavigationView.ActiveIndicator">
         <item name="android:color">@color/primary_shade</item>
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\">\n\n    <application\n        android:allowBackup=\"true\"\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\n        android:fullBackupContent=\"@xml/backup_rules\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/Theme.Bodyworks\"\n        tools:targetApi=\"31\">\n        <activity\n            android:name=\".WorkoutActivity\"\n            android:exported=\"false\" />\n\n        <activity\n            android:name=\".dailyWorkoutPlanner.DailyWorkoutPlanner\"\n            android:exported=\"false\" />\n\n        <activity\n            android:name=\".BmiActivity\"\n            android:exported=\"false\" />\n\n        <activity android:name=\".TimerActivity\"\n            android:exported=\"false\" />\n        <activity\n            android:name=\".MainActivity\"\n            android:exported=\"true\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n    </application>\n\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 9e6d88152ed9e6e7cd21f2b3cb2fd61e88dd72d3)
+++ b/app/src/main/AndroidManifest.xml	(date 1698198991129)
@@ -2,6 +2,7 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools">
 
+    <uses-permission android:name="android.permission.INTERNET"></uses-permission>
     <application
         android:allowBackup="true"
         android:dataExtractionRules="@xml/data_extraction_rules"
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".MainActivity\">\n\n    <FrameLayout\n        android:id=\"@+id/frameLayout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\">\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:orientation=\"vertical\">\n\n            <Button\n                android:id=\"@+id/button2\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n\n                android:text=\"workout\" />\n        </LinearLayout>\n\n    </FrameLayout>\n\n    <com.google.android.material.bottomnavigation.BottomNavigationView\n        android:id=\"@+id/bottomNavigationView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:menu=\"@menu/bottom_nav\"\n        android:background=\"@color/primary\"\n        app:itemIconTint=\"@color/white\"\n        app:itemTextColor=\"@color/white\"\n        app:itemActiveIndicatorStyle=\"@style/App.Custom.Indicator\"/>\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	(revision 9e6d88152ed9e6e7cd21f2b3cb2fd61e88dd72d3)
+++ b/app/src/main/res/layout/activity_main.xml	(date 1698198991107)
@@ -19,12 +19,18 @@
             android:layout_height="match_parent"
             android:orientation="vertical">
 
+            <Button
+                android:id="@+id/button"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Button" />
+
             <Button
                 android:id="@+id/button2"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
 
-                android:text="workout" />
+                android:text="Button" />
         </LinearLayout>
 
     </FrameLayout>
Index: app/src/main/java/com/example/bodyworks/model/ChildSubWorkoutModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/bodyworks/model/ChildSubWorkoutModel.kt b/app/src/main/java/com/example/bodyworks/model/ChildSubWorkoutModel.kt
new file mode 100644
--- /dev/null	(date 1698198991110)
+++ b/app/src/main/java/com/example/bodyworks/model/ChildSubWorkoutModel.kt	(date 1698198991110)
@@ -0,0 +1,6 @@
+package com.example.bodyworks.model
+
+data class ChildSubWorkoutModel(
+    val imgSrc: Int,
+    val workoutName: String
+)
Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"deploymentTargetDropDown\">\n    <targetSelectedWithDropDown>\n      <Target>\n        <type value=\"QUICK_BOOT_TARGET\" />\n        <deviceKey>\n          <Key>\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\n            <value value=\"$USER_HOME$/.android/avd/Pixel_4_API_33.avd\" />\n          </Key>\n        </deviceKey>\n      </Target>\n    </targetSelectedWithDropDown>\n    <timeTargetWasSelectedWithDropDown value=\"2023-10-24T18:05:49.806784Z\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
--- a/.idea/deploymentTargetDropDown.xml	(revision 9e6d88152ed9e6e7cd21f2b3cb2fd61e88dd72d3)
+++ b/.idea/deploymentTargetDropDown.xml	(date 1698200528593)
@@ -12,6 +12,6 @@
         </deviceKey>
       </Target>
     </targetSelectedWithDropDown>
-    <timeTargetWasSelectedWithDropDown value="2023-10-24T18:05:49.806784Z" />
+    <timeTargetWasSelectedWithDropDown value="2023-10-25T02:21:44.072118Z" />
   </component>
 </project>
\ No newline at end of file
Index: app/src/main/java/com/example/bodyworks/model/ParentWorkoutModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/bodyworks/model/ParentWorkoutModel.kt b/app/src/main/java/com/example/bodyworks/model/ParentWorkoutModel.kt
new file mode 100644
--- /dev/null	(date 1698198991125)
+++ b/app/src/main/java/com/example/bodyworks/model/ParentWorkoutModel.kt	(date 1698198991125)
@@ -0,0 +1,6 @@
+package com.example.bodyworks.model
+
+data class ParentWorkoutModel(
+    var categoryTitle: String,
+    var childSubWorkoutItemList: MutableList<ChildSubWorkoutModel>
+)
Index: app/src/main/java/com/example/bodyworks/adapter/ChildSubWorkoutAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/bodyworks/adapter/ChildSubWorkoutAdapter.kt b/app/src/main/java/com/example/bodyworks/adapter/ChildSubWorkoutAdapter.kt
new file mode 100644
--- /dev/null	(date 1698203752300)
+++ b/app/src/main/java/com/example/bodyworks/adapter/ChildSubWorkoutAdapter.kt	(date 1698203752300)
@@ -0,0 +1,66 @@
+package com.example.bodyworks.adapter
+
+import android.content.Context
+import android.content.Intent
+import android.util.Log
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.ImageView
+import android.widget.TextView
+import androidx.appcompat.app.AppCompatActivity
+import androidx.cardview.widget.CardView
+import androidx.recyclerview.widget.RecyclerView
+import com.bumptech.glide.Glide
+import com.example.bodyworks.R
+import com.example.bodyworks.WorkoutActivity
+import com.example.bodyworks.model.ChildSubWorkoutModel
+import com.example.bodyworks.model.ParentWorkoutModel
+
+class ChildSubWorkoutAdapter(private val parentWorkoutList: ParentWorkoutModel,val childSubWorkoutList: MutableList<ChildSubWorkoutModel>):
+    RecyclerView.Adapter<ChildSubWorkoutAdapter.ChildViewHolder>() {
+   // private var parentActivity: AppCompatActivity? = null
+    override fun onCreateViewHolder(
+        parent: ViewGroup,
+        viewType: Int
+    ): ChildSubWorkoutAdapter.ChildViewHolder {
+        val view = LayoutInflater
+            .from(parent.context)
+            .inflate(R.layout.child_subworkout_item_view, parent, false);
+        return ChildViewHolder(view);
+    }
+
+    class ChildViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
+        val childSubWorkoutTitle: TextView
+        val carouselViewImage: ImageView
+        val subWorkoutCard: CardView
+
+        init {
+            childSubWorkoutTitle = itemView.findViewById(R.id.child_subworkout_item_title)
+            carouselViewImage = itemView.findViewById(R.id.carousel_image_view)
+            subWorkoutCard = itemView.findViewById(R.id.subWorkoutCard)
+        }
+    }
+
+    override fun onBindViewHolder(holder: ChildSubWorkoutAdapter.ChildViewHolder, position: Int) {
+        val childSubWorkoutData = childSubWorkoutList[position];
+        holder.childSubWorkoutTitle.text = childSubWorkoutData.workoutName;
+        Glide.with(holder.itemView).load(childSubWorkoutData.imgSrc).into(holder.carouselViewImage);
+        holder.subWorkoutCard.setOnClickListener {
+            openActivityOnCardClick(holder.itemView.context,childSubWorkoutData,parentWorkoutList);
+            Log.e("ParentTitle:",parentWorkoutList.categoryTitle.toString());
+        }
+    }
+
+    override fun getItemCount(): Int {
+        return childSubWorkoutList.size;
+    }
+
+    private fun openActivityOnCardClick(context: Context, childSubWorkoutData: ChildSubWorkoutModel,parentWorkoutList: ParentWorkoutModel){
+        val intent = Intent(context, WorkoutActivity::class.java)
+        intent.putExtra("categoryTitle",parentWorkoutList.categoryTitle);
+        intent.putExtra("imgSrc", childSubWorkoutData.imgSrc);
+        intent.putExtra("workoutName", childSubWorkoutData.workoutName);
+        context.startActivity(intent)
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/parent_workout_category_item_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/parent_workout_category_item_view.xml b/app/src/main/res/layout/parent_workout_category_item_view.xml
new file mode 100644
--- /dev/null	(date 1698198991123)
+++ b/app/src/main/res/layout/parent_workout_category_item_view.xml	(date 1698198991123)
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent">
+
+        <TextView
+            android:id="@+id/parent_workout_item_title"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:padding="12sp"
+            android:textSize="18sp"
+            android:textStyle="bold"/>
+
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/child_recyclerview"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+            tools:listitem="@layout/child_subworkout_item_view"/>
+
+    </LinearLayout>
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/bodyworks/adapter/ParentWorkoutAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/bodyworks/adapter/ParentWorkoutAdapter.kt b/app/src/main/java/com/example/bodyworks/adapter/ParentWorkoutAdapter.kt
new file mode 100644
--- /dev/null	(date 1698202056914)
+++ b/app/src/main/java/com/example/bodyworks/adapter/ParentWorkoutAdapter.kt	(date 1698202056914)
@@ -0,0 +1,37 @@
+package com.example.bodyworks.adapter
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+import com.example.bodyworks.R
+import com.example.bodyworks.model.ParentWorkoutModel
+
+class ParentWorkoutAdapter(private val parentItemList: MutableList<ParentWorkoutModel>):
+    RecyclerView.Adapter<ParentWorkoutAdapter.ParentViewHolder>() {
+    override fun onCreateViewHolder(
+        parent: ViewGroup,
+        viewType: Int
+    ): ParentWorkoutAdapter.ParentViewHolder {
+        val view = LayoutInflater.from(parent.context)
+            .inflate(R.layout.parent_workout_category_item_view, parent, false);
+        return ParentViewHolder(view);
+    }
+
+    class ParentViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
+        val parentWorkoutTitle: TextView = itemView.findViewById(R.id.parent_workout_item_title);
+        val childRecyclerView: RecyclerView = itemView.findViewById(R.id.child_recyclerview);
+    }
+
+    override fun onBindViewHolder(holder: ParentWorkoutAdapter.ParentViewHolder, position: Int) {
+        val parentWorkoutData = parentItemList[position];
+        holder.parentWorkoutTitle.text = parentWorkoutData.categoryTitle;
+        val childSubWorkoutAdapter = ChildSubWorkoutAdapter(parentWorkoutData,parentWorkoutData.childSubWorkoutItemList);
+        holder.childRecyclerView.adapter = childSubWorkoutAdapter;
+    }
+
+    override fun getItemCount(): Int {
+        return parentItemList.size;
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/child_subworkout_item_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/child_subworkout_item_view.xml b/app/src/main/res/layout/child_subworkout_item_view.xml
new file mode 100644
--- /dev/null	(date 1698198991119)
+++ b/app/src/main/res/layout/child_subworkout_item_view.xml	(date 1698198991119)
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="wrap_content"
+    android:layout_height="match_parent">
+    <com.google.android.material.card.MaterialCardView
+        android:id="@+id/subWorkoutCard"
+        style="?attr/materialCardViewElevatedStyle"
+        android:layout_width="150dp"
+        android:layout_height="match_parent"
+        android:layout_margin="5dp"
+        android:clickable="true"
+        android:elevation="2dp"
+        app:cardCornerRadius="5dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        android:focusable="true">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:padding="8dp">
+
+            <ImageView
+                android:id="@+id/carousel_image_view"
+                android:layout_width="120dp"
+                android:layout_height="80dp"
+                android:layout_marginBottom="8dp"
+                android:contentDescription="ImageView"
+                android:scaleType="centerCrop"
+                app:srcCompat="@drawable/ic_launcher_foreground" />
+
+
+            <TextView
+                android:id="@+id/child_subworkout_item_title"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="bottom|center_horizontal"
+                android:layout_marginBottom="10dp"
+                android:fontFamily="monospace"
+                android:textAppearance="?attr/textAppearanceTitleMedium"
+                android:textColor="@color/black"
+                android:textSize="15sp"
+                android:textStyle="bold"
+                app:layout_constraintBottom_toBottomOf="parent" />
+        </LinearLayout>
+    </com.google.android.material.card.MaterialCardView>
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
